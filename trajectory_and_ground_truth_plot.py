# -*- coding: utf-8 -*-
"""Trajectory_And_Ground_Truth_plot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IYj2SX-RgA57jl3umjaYuqn06ANWCX_A
"""

import matplotlib.pyplot as plt
import json
import pandas as pd
from vis_place_recog import get_place_coords


def plot_trajectory(trajectory_list, x_axes=0, y_axes=2):
    # x_axes = 0 # 0 refers to X coordinate, 1 to Y , 2 to Z
    # y_axes = 2

    X_list = []
    for idx, i in enumerate(trajectory_list):
        if idx < 1050:
            X_list.append(i["Position"][x_axes])

    Y_list = []
    for idx, i in enumerate(trajectory_list):
        if idx < 1050:
            Y_list.append(i["Position"][y_axes])

    plt.plot(X_list, Y_list)
    # plt.show()


def plot_ground_truth(ground_truth_list, x_axes="X", y_axes="Z"):
    # x_axes = "X"
    # y_axes = "Z"

    X_list = [i[x_axes] / 100 for i in ground_truth_list]
    Y_list = [i[y_axes] / 100 for i in ground_truth_list]

    plt.plot(X_list, Y_list)
    # plt.show()


def plot_trajectories_and_ground_truth(traj_file_1, traj_file_2, gt_file, place_coords_X, place_coords_Y):
    # gt_file = None
    # traj_file_2 = None
    axes = ["X", "Y", "Z"]
    x_axes = 0
    y_axes = 2
    if traj_file_1:
        traj_list = []
        with open(traj_file_1, "r") as f:
            for line in f:
                traj_list.append(json.loads(line))
            plot_trajectory(traj_list, x_axes, y_axes)
            f.close()

    if traj_file_2:
        traj_list = []
        with open(traj_file_2, "r") as f:
            for line in f:
                traj_list.append(json.loads(line))
            plot_trajectory(traj_list, x_axes, y_axes)
            f.close()

    print("a")
    print(gt_file)
    print("gt_file present")
    gt_list = []
    data = pd.read_csv(gt_file)
    plt.scatter(data['C1_X'] / 100, data['C1_Z'] / 100, c='r')
    plt.scatter(place_coords_X, place_coords_Y, c='b')
    # plt.show()

    plt.xlabel(axes[x_axes])
    plt.ylabel(axes[y_axes])
    plt.legend(["Our Output", "SPTAM_output", "Predicted places", "Ground Truth"])
    plt.grid(True)

    plt.show()


place_coords_X, place_coords_Y = get_place_coords()
plot_trajectories_and_ground_truth("Positions_v5.txt", "Positions_seq22.txt", "corner_ground_truth.csv", place_coords_X, place_coords_Y)
